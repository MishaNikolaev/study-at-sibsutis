{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HUAWEI\\\\visual_programming\\\\dz07\\\\src\\\\DataSet.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataSet = ({\n  headers,\n  data,\n  renderHeader,\n  renderCell\n}) => {\n  _s();\n  const [selectedCells, setSelectedCells] = useState(new Set());\n  const handleCellClick = (rowIndex, colIndex, event) => {\n    const cellKey = `${rowIndex}-${colIndex}`;\n    const newSelection = new Set(selectedCells);\n    if (event.ctrlKey || event.metaKey) {\n      if (newSelection.has(cellKey)) {\n        newSelection.delete(cellKey);\n      } else {\n        newSelection.add(cellKey);\n      }\n    } else {\n      if (newSelection.size === 1 && newSelection.has(cellKey)) {\n        newSelection.clear();\n      } else {\n        newSelection.clear();\n        newSelection.add(cellKey);\n      }\n    }\n    setSelectedCells(newSelection);\n  };\n  const isRowSelected = rowIndex => {\n    return Array.from(selectedCells).some(key => key.startsWith(`${rowIndex}-`));\n  };\n\n  // Если заголовки не переданы, берем ключи из первого элемента данных\n  const effectiveHeaders = headers || (data.length > 0 ? Object.keys(data[0]) : []);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    style: {\n      borderCollapse: 'collapse',\n      width: '100%',\n      border: '1px solid #ddd',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: effectiveHeaders.map((header, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            border: '1px solid #ddd',\n            padding: '8px',\n            backgroundColor: '#f2f2f2',\n            textAlign: 'left'\n          },\n          children: renderHeader ? renderHeader(header, idx) : header\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.map((item, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        style: {\n          backgroundColor: isRowSelected(rowIndex) ? '#b3e0ff' : 'transparent'\n        },\n        children: effectiveHeaders.map((header, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            border: '1px solid #ddd',\n            padding: '8px',\n            cursor: 'pointer'\n          },\n          onClick: e => handleCellClick(rowIndex, colIndex, e),\n          children: renderCell ? renderCell(item, header, rowIndex, colIndex) : item[header]\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(DataSet, \"/1dhhXtIqtX32c2huOcrldGsq7w=\");\n_c = DataSet;\nDataSet.propTypes = {\n  headers: PropTypes.array,\n  data: PropTypes.array.isRequired,\n  renderHeader: PropTypes.func,\n  renderCell: PropTypes.func\n};\nexport default DataSet;\nvar _c;\n$RefreshReg$(_c, \"DataSet\");","map":{"version":3,"names":["React","useState","PropTypes","jsxDEV","_jsxDEV","DataSet","headers","data","renderHeader","renderCell","_s","selectedCells","setSelectedCells","Set","handleCellClick","rowIndex","colIndex","event","cellKey","newSelection","ctrlKey","metaKey","has","delete","add","size","clear","isRowSelected","Array","from","some","key","startsWith","effectiveHeaders","length","Object","keys","style","borderCollapse","width","border","fontFamily","children","map","header","idx","padding","backgroundColor","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","item","cursor","onClick","e","_c","propTypes","array","isRequired","func","$RefreshReg$"],"sources":["C:/Users/HUAWEI/visual_programming/dz07/src/DataSet.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst DataSet = ({ headers, data, renderHeader, renderCell }) => {\n  const [selectedCells, setSelectedCells] = useState(new Set());\n\n  const handleCellClick = (rowIndex, colIndex, event) => {\n    const cellKey = `${rowIndex}-${colIndex}`;\n    const newSelection = new Set(selectedCells);\n\n    if (event.ctrlKey || event.metaKey) {\n      if (newSelection.has(cellKey)) {\n        newSelection.delete(cellKey);\n      } else {\n        newSelection.add(cellKey);\n      }\n    } else {\n      if (newSelection.size === 1 && newSelection.has(cellKey)) {\n        newSelection.clear();\n      } else {\n        newSelection.clear();\n        newSelection.add(cellKey);\n      }\n    }\n\n    setSelectedCells(newSelection);\n  };\n\n  const isRowSelected = (rowIndex) => {\n    return Array.from(selectedCells).some(key => key.startsWith(`${rowIndex}-`));\n  };\n\n  // Если заголовки не переданы, берем ключи из первого элемента данных\n  const effectiveHeaders = headers || (data.length > 0 ? Object.keys(data[0]) : []);\n\n  return (\n    <table style={{\n      borderCollapse: 'collapse',\n      width: '100%',\n      border: '1px solid #ddd',\n      fontFamily: 'Arial, sans-serif'\n    }}>\n      <thead>\n        <tr>\n          {effectiveHeaders.map((header, idx) => (\n            <th key={idx} style={{\n              border: '1px solid #ddd',\n              padding: '8px',\n              backgroundColor: '#f2f2f2',\n              textAlign: 'left'\n            }}>\n              {renderHeader ? renderHeader(header, idx) : header}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((item, rowIndex) => (\n          <tr key={rowIndex} style={{\n            backgroundColor: isRowSelected(rowIndex) ? '#b3e0ff' : 'transparent'\n          }}>\n            {effectiveHeaders.map((header, colIndex) => (\n              <td \n                key={colIndex}\n                style={{\n                  border: '1px solid #ddd',\n                  padding: '8px',\n                  cursor: 'pointer'\n                }}\n                onClick={(e) => handleCellClick(rowIndex, colIndex, e)}\n              >\n                {renderCell ? renderCell(item, header, rowIndex, colIndex) : item[header]}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nDataSet.propTypes = {\n  headers: PropTypes.array,\n  data: PropTypes.array.isRequired,\n  renderHeader: PropTypes.func,\n  renderCell: PropTypes.func,\n};\n\nexport default DataSet;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}