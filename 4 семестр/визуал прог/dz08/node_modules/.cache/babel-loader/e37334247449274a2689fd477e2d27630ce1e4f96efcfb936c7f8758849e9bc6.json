{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HUAWEI\\\\visual_programming\\\\dz06\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport WeatherDisplay from './WeatherDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'eb4825f6f3d9d0ae861db8f355075906';\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState('Novosibirsk');\n  const [inputCity, setInputCity] = useState(''); // Для хранения введенного города\n  const [coordinates, setCoordinates] = useState({\n    lat: null,\n    lon: null\n  });\n  useEffect(() => {\n    fetchWeather();\n  }, [city]);\n  const fetchWeather = async () => {\n    try {\n      const geoResponse = await axios.get(`http://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=1&appid=${API_KEY}`);\n      const {\n        lat,\n        lon\n      } = geoResponse.data[0];\n      setCoordinates({\n        lat,\n        lon\n      });\n      const weatherResponse = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`);\n      setWeatherData(weatherResponse.data);\n    } catch (error) {\n      console.error('Error fetching weather data', error);\n    }\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    setCity(inputCity);\n    setInputCity('');\n  };\n  let backgroundColor = '#4e71f3';\n  if (weatherData) {\n    const currentHour = new Date(weatherData.list[0].dt_txt).getHours();\n    if (currentHour >= 18 || currentHour < 6) {\n      backgroundColor = '#010c39';\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '20px',\n      minHeight: '100vh',\n      margin: 0,\n      backgroundColor\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434\",\n        value: inputCity,\n        onChange: e => setInputCity(e.target.value),\n        style: {\n          padding: '10px',\n          fontSize: '16px',\n          borderRadius: '5px',\n          border: '1px solid #ccc'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          padding: '10px 20px',\n          fontSize: '16px',\n          borderRadius: '5px',\n          border: 'none',\n          backgroundColor: '#4e71f3',\n          color: 'white',\n          marginLeft: '10px',\n          cursor: 'pointer'\n        },\n        children: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(WeatherDisplay, {\n      weatherData: weatherData,\n      city: city,\n      coordinates: coordinates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pgjmaO4keiuXNhVLacQj5rEy86U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","WeatherDisplay","jsxDEV","_jsxDEV","API_KEY","App","_s","weatherData","setWeatherData","city","setCity","inputCity","setInputCity","coordinates","setCoordinates","lat","lon","fetchWeather","geoResponse","get","data","weatherResponse","error","console","handleSearch","e","preventDefault","backgroundColor","currentHour","Date","list","dt_txt","getHours","style","textAlign","padding","minHeight","margin","children","onSubmit","marginBottom","type","placeholder","value","onChange","target","fontSize","borderRadius","border","fileName","_jsxFileName","lineNumber","columnNumber","color","marginLeft","cursor","_c","$RefreshReg$"],"sources":["C:/Users/HUAWEI/visual_programming/dz06/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport WeatherDisplay from './WeatherDisplay';\n\nconst API_KEY = 'eb4825f6f3d9d0ae861db8f355075906';\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState('Novosibirsk');\n  const [inputCity, setInputCity] = useState(''); // Для хранения введенного города\n  const [coordinates, setCoordinates] = useState({ lat: null, lon: null });\n\n  useEffect(() => {\n    fetchWeather();\n  }, [city]);\n\n  const fetchWeather = async () => {\n    try {\n      const geoResponse = await axios.get(\n        `http://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=1&appid=${API_KEY}`\n      );\n      const { lat, lon } = geoResponse.data[0];\n      setCoordinates({ lat, lon });\n\n      const weatherResponse = await axios.get(\n        `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`\n      );\n      setWeatherData(weatherResponse.data);\n    } catch (error) {\n      console.error('Error fetching weather data', error);\n    }\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    setCity(inputCity); \n    setInputCity(''); \n  };\n\n  let backgroundColor = '#4e71f3';\n  if (weatherData) {\n    const currentHour = new Date(weatherData.list[0].dt_txt).getHours();\n    if (currentHour >= 18 || currentHour < 6) {\n      backgroundColor = '#010c39';\n    }\n  }\n\n  return (\n    <div style={{ textAlign: 'center', padding: '20px', minHeight: '100vh', margin: 0, backgroundColor }}>\n      {}\n      <form onSubmit={handleSearch} style={{ marginBottom: '20px' }}>\n        <input\n          type=\"text\"\n          placeholder=\"Введите город\"\n          value={inputCity}\n          onChange={(e) => setInputCity(e.target.value)}\n          style={{ padding: '10px', fontSize: '16px', borderRadius: '5px', border: '1px solid #ccc' }}\n        />\n        <button\n          type=\"submit\"\n          style={{\n            padding: '10px 20px',\n            fontSize: '16px',\n            borderRadius: '5px',\n            border: 'none',\n            backgroundColor: '#4e71f3',\n            color: 'white',\n            marginLeft: '10px',\n            cursor: 'pointer',\n          }}\n        >\n          Поиск\n        </button>\n      </form>\n\n      {weatherData && <WeatherDisplay weatherData={weatherData} city={city} coordinates={coordinates} />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}