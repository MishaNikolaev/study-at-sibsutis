{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HUAWEI\\\\visual_programming\\\\dz07\\\\src\\\\DataSet.js\",\n  _s = $RefreshSig$();\n// DataSet.js\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataSet = ({\n  headers,\n  data,\n  renderHeader,\n  renderCell\n}) => {\n  _s();\n  const [selectedRows, setSelectedRows] = useState(new Set());\n  const handleRowSelection = (index, event) => {\n    // Проверяем, что клик был по левой ячейке (для выделения всей строки)\n    if (event.target.cellIndex !== 0) return;\n    if (event.ctrlKey || event.metaKey) {\n      // При зажатом Ctrl добавляем/удаляем строку из выделения\n      const newSelection = new Set(selectedRows);\n      if (newSelection.has(index)) {\n        newSelection.delete(index);\n      } else {\n        newSelection.add(index);\n      }\n      setSelectedRows(newSelection);\n    } else {\n      // Без Ctrl выделяем только эту строку (или снимаем выделение, если уже выделена)\n      if (selectedRows.size === 1 && selectedRows.has(index)) {\n        setSelectedRows(new Set());\n      } else {\n        setSelectedRows(new Set([index]));\n      }\n    }\n  };\n\n  // Если заголовки не переданы, берем ключи из первого элемента данных\n  const effectiveHeaders = headers || (data.length > 0 ? Object.keys(data[0]) : []);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    style: {\n      borderCollapse: 'collapse',\n      width: '100%',\n      border: '1px solid #ddd',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            border: '1px solid #ddd',\n            padding: '8px',\n            backgroundColor: '#f2f2f2',\n            width: '30px',\n            textAlign: 'center'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), effectiveHeaders.map((header, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            border: '1px solid #ddd',\n            padding: '8px',\n            backgroundColor: '#f2f2f2',\n            textAlign: 'left'\n          },\n          children: renderHeader ? renderHeader(header, idx) : header\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.map((item, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        style: {\n          backgroundColor: selectedRows.has(rowIndex) ? '#e6f7ff' : 'transparent'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            border: '1px solid #ddd',\n            padding: '8px',\n            cursor: 'pointer',\n            backgroundColor: selectedRows.has(rowIndex) ? '#e6f7ff' : '#f9f9f9'\n          },\n          onClick: e => handleRowSelection(rowIndex, e),\n          children: selectedRows.has(rowIndex) ? '✓' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), effectiveHeaders.map((header, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            border: '1px solid #ddd',\n            padding: '8px'\n          },\n          children: renderCell ? renderCell(item, header, rowIndex, colIndex) : item[header]\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this))]\n      }, rowIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(DataSet, \"6SogghqtRSu+jgKfIN6c22qu//s=\");\n_c = DataSet;\nDataSet.propTypes = {\n  headers: PropTypes.array,\n  data: PropTypes.array.isRequired,\n  renderHeader: PropTypes.func,\n  renderCell: PropTypes.func\n};\nexport default DataSet;\nvar _c;\n$RefreshReg$(_c, \"DataSet\");","map":{"version":3,"names":["React","useState","PropTypes","jsxDEV","_jsxDEV","DataSet","headers","data","renderHeader","renderCell","_s","selectedRows","setSelectedRows","Set","handleRowSelection","index","event","target","cellIndex","ctrlKey","metaKey","newSelection","has","delete","add","size","effectiveHeaders","length","Object","keys","style","borderCollapse","width","border","fontFamily","children","padding","backgroundColor","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","map","header","idx","item","rowIndex","cursor","onClick","e","colIndex","_c","propTypes","array","isRequired","func","$RefreshReg$"],"sources":["C:/Users/HUAWEI/visual_programming/dz07/src/DataSet.js"],"sourcesContent":["// DataSet.js\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst DataSet = ({ headers, data, renderHeader, renderCell }) => {\n  const [selectedRows, setSelectedRows] = useState(new Set());\n\n  const handleRowSelection = (index, event) => {\n    // Проверяем, что клик был по левой ячейке (для выделения всей строки)\n    if (event.target.cellIndex !== 0) return;\n\n    if (event.ctrlKey || event.metaKey) {\n      // При зажатом Ctrl добавляем/удаляем строку из выделения\n      const newSelection = new Set(selectedRows);\n      if (newSelection.has(index)) {\n        newSelection.delete(index);\n      } else {\n        newSelection.add(index);\n      }\n      setSelectedRows(newSelection);\n    } else {\n      // Без Ctrl выделяем только эту строку (или снимаем выделение, если уже выделена)\n      if (selectedRows.size === 1 && selectedRows.has(index)) {\n        setSelectedRows(new Set());\n      } else {\n        setSelectedRows(new Set([index]));\n      }\n    }\n  };\n\n  // Если заголовки не переданы, берем ключи из первого элемента данных\n  const effectiveHeaders = headers || (data.length > 0 ? Object.keys(data[0]) : []);\n\n  return (\n    <table style={{\n      borderCollapse: 'collapse',\n      width: '100%',\n      border: '1px solid #ddd',\n      fontFamily: 'Arial, sans-serif'\n    }}>\n      <thead>\n        <tr>\n          <th style={{\n            border: '1px solid #ddd',\n            padding: '8px',\n            backgroundColor: '#f2f2f2',\n            width: '30px',\n            textAlign: 'center'\n          }}></th>\n          {effectiveHeaders.map((header, idx) => (\n            <th key={idx} style={{\n              border: '1px solid #ddd',\n              padding: '8px',\n              backgroundColor: '#f2f2f2',\n              textAlign: 'left'\n            }}>\n              {renderHeader ? renderHeader(header, idx) : header}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((item, rowIndex) => (\n          <tr \n            key={rowIndex}\n            style={{\n              backgroundColor: selectedRows.has(rowIndex) ? '#e6f7ff' : 'transparent'\n            }}\n          >\n            <td\n              style={{\n                border: '1px solid #ddd',\n                padding: '8px',\n                cursor: 'pointer',\n                backgroundColor: selectedRows.has(rowIndex) ? '#e6f7ff' : '#f9f9f9'\n              }}\n              onClick={(e) => handleRowSelection(rowIndex, e)}\n            >\n              {selectedRows.has(rowIndex) ? '✓' : ''}\n            </td>\n            {effectiveHeaders.map((header, colIndex) => (\n              <td \n                key={colIndex} \n                style={{\n                  border: '1px solid #ddd',\n                  padding: '8px'\n                }}\n              >\n                {renderCell ? renderCell(item, header, rowIndex, colIndex) : item[header]}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nDataSet.propTypes = {\n  headers: PropTypes.array,\n  data: PropTypes.array.isRequired,\n  renderHeader: PropTypes.func,\n  renderCell: PropTypes.func,\n};\n\nexport default DataSet;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}