{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HUAWEI\\\\visual_programming\\\\dz07\\\\src\\\\DataSet.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataSet = ({\n  headers,\n  data,\n  renderHeader,\n  renderCell\n}) => {\n  _s();\n  const [selectedRows, setSelectedRows] = useState(new Set());\n  const handleRowClick = (index, event) => {\n    if (event.target.cellIndex !== 0) return;\n    if (event.ctrlKey || event.metaKey) {\n      const newSelection = new Set(selectedRows);\n      if (newSelection.has(index)) {\n        newSelection.delete(index);\n      } else {\n        newSelection.add(index);\n      }\n      setSelectedRows(newSelection);\n    } else {\n      if (selectedRows.size === 1 && selectedRows.has(index)) {\n        setSelectedRows(new Set());\n      } else {\n        setSelectedRows(new Set([index]));\n      }\n    }\n  };\n  const effectiveHeaders = headers || (data.length > 0 ? Object.keys(data[0]) : []);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    style: {\n      borderCollapse: 'collapse',\n      width: '100%',\n      border: '1px solid #ddd'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            border: '1px solid #ddd',\n            padding: '8px',\n            backgroundColor: '#f2f2f2',\n            width: '30px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), effectiveHeaders.map((header, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            border: '1px solid #ddd',\n            padding: '8px',\n            backgroundColor: '#f2f2f2'\n          },\n          children: renderHeader ? renderHeader(header, idx) : header\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.map((item, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        style: {\n          backgroundColor: selectedRows.has(rowIndex) ? '#e6f7ff' : 'transparent',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            border: '1px solid #ddd',\n            padding: '8px'\n          },\n          onClick: e => handleRowClick(rowIndex, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), effectiveHeaders.map((header, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            border: '1px solid #ddd',\n            padding: '8px'\n          },\n          children: renderCell ? renderCell(item, header, rowIndex, colIndex) : item[header]\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this))]\n      }, rowIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(DataSet, \"6SogghqtRSu+jgKfIN6c22qu//s=\");\n_c = DataSet;\nDataSet.propTypes = {\n  headers: PropTypes.array,\n  data: PropTypes.array.isRequired,\n  renderHeader: PropTypes.func,\n  renderCell: PropTypes.func\n};\nexport default DataSet;\nvar _c;\n$RefreshReg$(_c, \"DataSet\");","map":{"version":3,"names":["React","useState","PropTypes","jsxDEV","_jsxDEV","DataSet","headers","data","renderHeader","renderCell","_s","selectedRows","setSelectedRows","Set","handleRowClick","index","event","target","cellIndex","ctrlKey","metaKey","newSelection","has","delete","add","size","effectiveHeaders","length","Object","keys","style","borderCollapse","width","border","children","padding","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","map","header","idx","item","rowIndex","cursor","onClick","e","colIndex","_c","propTypes","array","isRequired","func","$RefreshReg$"],"sources":["C:/Users/HUAWEI/visual_programming/dz07/src/DataSet.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst DataSet = ({ headers, data, renderHeader, renderCell }) => {\n  const [selectedRows, setSelectedRows] = useState(new Set());\n\n  const handleRowClick = (index, event) => {\n    if (event.target.cellIndex !== 0) return;\n\n    if (event.ctrlKey || event.metaKey) {\n      const newSelection = new Set(selectedRows);\n      if (newSelection.has(index)) {\n        newSelection.delete(index);\n      } else {\n        newSelection.add(index);\n      }\n      setSelectedRows(newSelection);\n    } else {\n      if (selectedRows.size === 1 && selectedRows.has(index)) {\n        setSelectedRows(new Set());\n      } else {\n        setSelectedRows(new Set([index]));\n      }\n    }\n  };\n\n  const effectiveHeaders = headers || (data.length > 0 ? Object.keys(data[0]) : []);\n\n  return (\n    <table style={{ borderCollapse: 'collapse', width: '100%', border: '1px solid #ddd' }}>\n      <thead>\n        <tr>\n          <th style={{ border: '1px solid #ddd', padding: '8px', backgroundColor: '#f2f2f2', width: '30px' }}></th>\n          {effectiveHeaders.map((header, idx) => (\n            <th key={idx} style={{ border: '1px solid #ddd', padding: '8px', backgroundColor: '#f2f2f2' }}>\n              {renderHeader ? renderHeader(header, idx) : header}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((item, rowIndex) => (\n          <tr \n            key={rowIndex} \n            style={{ \n              backgroundColor: selectedRows.has(rowIndex) ? '#e6f7ff' : 'transparent',\n              cursor: 'pointer'\n            }}\n          >\n            <td \n              style={{ border: '1px solid #ddd', padding: '8px' }}\n              onClick={(e) => handleRowClick(rowIndex, e)}\n            >\n              {/* Левая область для выделения */}\n            </td>\n            {effectiveHeaders.map((header, colIndex) => (\n              <td key={colIndex} style={{ border: '1px solid #ddd', padding: '8px' }}>\n                {renderCell ? renderCell(item, header, rowIndex, colIndex) : item[header]}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nDataSet.propTypes = {\n  headers: PropTypes.array,\n  data: PropTypes.array.isRequired,\n  renderHeader: PropTypes.func,\n  renderCell: PropTypes.func,\n};\n\nexport default DataSet;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}