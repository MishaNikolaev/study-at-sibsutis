{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HUAWEI\\\\visual_programming\\\\dz09\\\\src\\\\TODOS.js\";\nimport DataApp from './DataApp';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TODOS = () => {\n  const initialValues = {\n    userId: '',\n    title: '',\n    completed: false\n  };\n  const validationSchema = Yup.object({\n    userId: Yup.number().required('User ID is required'),\n    title: Yup.string().required('Title is required'),\n    completed: Yup.boolean()\n  });\n  const fields = [{\n    name: 'userId',\n    label: 'User ID',\n    type: 'number'\n  }, {\n    name: 'title',\n    label: 'Title'\n  }, {\n    name: 'completed',\n    label: 'Completed',\n    type: 'checkbox'\n  }];\n  return /*#__PURE__*/_jsxDEV(DataApp, {\n    endpoint: \"todos\",\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    fields: fields,\n    checkboxStyle: {\n      width: '20px',\n      height: '20px',\n      marginRight: '10px',\n      verticalAlign: 'middle'\n    },\n    checkboxLabelStyle: {\n      display: 'flex',\n      alignItems: 'center',\n      fontSize: '16px',\n      marginLeft: '-5px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = TODOS;\nexport default TODOS;\nvar _c;\n$RefreshReg$(_c, \"TODOS\");","map":{"version":3,"names":["DataApp","Yup","jsxDEV","_jsxDEV","TODOS","initialValues","userId","title","completed","validationSchema","object","number","required","string","boolean","fields","name","label","type","endpoint","checkboxStyle","width","height","marginRight","verticalAlign","checkboxLabelStyle","display","alignItems","fontSize","marginLeft","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HUAWEI/visual_programming/dz09/src/TODOS.js"],"sourcesContent":["import DataApp from './DataApp';\nimport * as Yup from 'yup';\n\nconst TODOS = () => {\n  const initialValues = {\n    userId: '',\n    title: '',\n    completed: false\n  };\n\n  const validationSchema = Yup.object({\n    userId: Yup.number().required('User ID is required'),\n    title: Yup.string().required('Title is required'),\n    completed: Yup.boolean()\n  });\n\n  const fields = [\n    { name: 'userId', label: 'User ID', type: 'number' },\n    { name: 'title', label: 'Title' },\n    { name: 'completed', label: 'Completed', type: 'checkbox' }\n  ];\n\n  return (\n    <DataApp\n      endpoint=\"todos\"\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      fields={fields}\n      checkboxStyle={{\n        width: '20px',\n        height: '20px',\n        marginRight: '10px',\n        verticalAlign: 'middle'\n      }}\n      checkboxLabelStyle={{\n        display: 'flex',\n        alignItems: 'center',\n        fontSize: '16px',\n        marginLeft: '-5px' \n      }}\n    />\n  );\n};\n\nexport default TODOS;\n"],"mappings":";AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAClB,MAAMC,aAAa,GAAG;IACpBC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE;EACb,CAAC;EAED,MAAMC,gBAAgB,GAAGR,GAAG,CAACS,MAAM,CAAC;IAClCJ,MAAM,EAAEL,GAAG,CAACU,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,qBAAqB,CAAC;IACpDL,KAAK,EAAEN,GAAG,CAACY,MAAM,CAAC,CAAC,CAACD,QAAQ,CAAC,mBAAmB,CAAC;IACjDJ,SAAS,EAAEP,GAAG,CAACa,OAAO,CAAC;EACzB,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAG,CACb;IAAEC,IAAI,EAAE,QAAQ;IAAEC,KAAK,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAS,CAAC,EACpD;IAAEF,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,EACjC;IAAED,IAAI,EAAE,WAAW;IAAEC,KAAK,EAAE,WAAW;IAAEC,IAAI,EAAE;EAAW,CAAC,CAC5D;EAED,oBACEf,OAAA,CAACH,OAAO;IACNmB,QAAQ,EAAC,OAAO;IAChBd,aAAa,EAAEA,aAAc;IAC7BI,gBAAgB,EAAEA,gBAAiB;IACnCM,MAAM,EAAEA,MAAO;IACfK,aAAa,EAAE;MACbC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,MAAM;MACdC,WAAW,EAAE,MAAM;MACnBC,aAAa,EAAE;IACjB,CAAE;IACFC,kBAAkB,EAAE;MAClBC,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE,QAAQ;MACpBC,QAAQ,EAAE,MAAM;MAChBC,UAAU,EAAE;IACd;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAACC,EAAA,GAvCI9B,KAAK;AAyCX,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}