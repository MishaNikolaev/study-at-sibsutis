{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HUAWEI\\\\visual_programming\\\\dz09\\\\src\\\\DataApp.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport DataSet from './DataSet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DataApp({\n  endpoint,\n  initialValues,\n  validationSchema,\n  fields\n}) {\n  _s();\n  const [data, setData] = useState([]);\n  const [optimisticData, setOptimisticData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [nextId, setNextId] = useState(1);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch(`https://jsonplaceholder.typicode.com/${endpoint}`);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch ${endpoint}`);\n        }\n        const responseData = await response.json();\n        setData(responseData);\n        setOptimisticData(responseData);\n        const maxId = responseData.reduce((max, item) => Math.max(max, item.id), 0);\n        setNextId(maxId + 1);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, [endpoint]);\n  const handleAdd = async values => {\n    const tempId = nextId;\n    const newItem = {\n      ...values,\n      id: tempId\n    };\n    setNextId(prev => prev + 1);\n    setOptimisticData(prev => [...prev, newItem]);\n    try {\n      const response = await fetch(`https://jsonplaceholder.typicode.com/${endpoint}`, {\n        method: 'POST',\n        body: JSON.stringify(newItem),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to add ${endpoint} item`);\n      }\n      const serverItem = await response.json();\n      setData(prev => [...prev, serverItem]);\n      setNextId(prev => Math.max(prev, serverItem.id + 1));\n    } catch (err) {\n      setOptimisticData(prev => prev.filter(item => item.id !== tempId));\n      setError(err.message);\n    }\n  };\n  const handleDelete = async ids => {\n    const backup = [...optimisticData];\n    setOptimisticData(prev => prev.filter(item => !ids.includes(item.id)));\n    try {\n      const responses = await Promise.all(ids.map(id => fetch(`https://jsonplaceholder.typicode.com/${endpoint}/${id}`, {\n        method: 'DELETE'\n      })));\n      const allOk = responses.every(r => r.ok);\n      if (!allOk) {\n        throw new Error(`Failed to delete ${endpoint} items`);\n      }\n      setData(prev => prev.filter(item => !ids.includes(item.id)));\n    } catch (err) {\n      setOptimisticData(backup);\n      setError(err.message);\n    }\n  };\n  const handleUpdate = async (id, updates) => {\n    const original = optimisticData.find(item => item.id === id);\n    setOptimisticData(prev => prev.map(item => item.id === id ? {\n      ...item,\n      ...updates\n    } : item));\n    try {\n      const response = await fetch(`https://jsonplaceholder.typicode.com/${endpoint}/${id}`, {\n        method: 'PATCH',\n        body: JSON.stringify(updates),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to update ${endpoint} item`);\n      }\n      const updatedItem = await response.json();\n      setData(prev => prev.map(item => item.id === id ? updatedItem : item));\n    } catch (err) {\n      setOptimisticData(prev => prev.map(item => item.id === id ? original : item));\n      setError(err.message);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: endpoint.charAt(0).toUpperCase() + endpoint.slice(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px',\n        padding: '20px',\n        border: '1px solid #ddd'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: (values, {\n          resetForm\n        }) => {\n          handleAdd(values);\n          resetForm();\n        },\n        children: ({\n          errors,\n          touched\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'grid',\n              gridTemplateColumns: 'repeat(2, 1fr)',\n              gap: '10px'\n            },\n            children: fields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: field.name,\n                children: field.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: field.type || 'text',\n                name: field.name,\n                id: field.name,\n                as: field.as || 'input',\n                style: {\n                  width: '100%',\n                  padding: '8px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: field.name,\n                component: \"div\",\n                style: {\n                  color: 'red'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this)]\n            }, field.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: {\n              marginTop: '10px',\n              padding: '8px 16px'\n            },\n            children: \"Add Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataSet, {\n      data: optimisticData,\n      onAdd: handleAdd,\n      onDelete: handleDelete,\n      onUpdate: handleUpdate,\n      headers: Object.keys(initialValues)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(DataApp, \"OZJKp8CuxP6hxEvN9H92MR+PiTw=\");\n_c = DataApp;\nvar _c;\n$RefreshReg$(_c, \"DataApp\");","map":{"version":3,"names":["useState","useEffect","Formik","Form","Field","ErrorMessage","Yup","DataSet","jsxDEV","_jsxDEV","DataApp","endpoint","initialValues","validationSchema","fields","_s","data","setData","optimisticData","setOptimisticData","loading","setLoading","error","setError","nextId","setNextId","fetchData","response","fetch","ok","Error","responseData","json","maxId","reduce","max","item","Math","id","err","message","handleAdd","values","tempId","newItem","prev","method","body","JSON","stringify","headers","serverItem","filter","handleDelete","ids","backup","includes","responses","Promise","all","map","allOk","every","r","handleUpdate","updates","original","find","updatedItem","children","fileName","_jsxFileName","lineNumber","columnNumber","className","charAt","toUpperCase","slice","style","marginBottom","padding","border","onSubmit","resetForm","errors","touched","display","gridTemplateColumns","gap","field","htmlFor","name","label","type","as","width","component","color","marginTop","onAdd","onDelete","onUpdate","Object","keys","_c","$RefreshReg$"],"sources":["C:/Users/HUAWEI/visual_programming/dz09/src/DataApp.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport DataSet from './DataSet';\n\nexport default function DataApp({ endpoint, initialValues, validationSchema, fields }) {\n  const [data, setData] = useState([]);\n  const [optimisticData, setOptimisticData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [nextId, setNextId] = useState(1);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch(`https://jsonplaceholder.typicode.com/${endpoint}`);\n        \n        if (!response.ok) {\n          throw new Error(`Failed to fetch ${endpoint}`);\n        }\n        \n        const responseData = await response.json();\n        setData(responseData);\n        setOptimisticData(responseData);\n        \n        const maxId = responseData.reduce((max, item) => Math.max(max, item.id), 0);\n        setNextId(maxId + 1);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchData();\n  }, [endpoint]);\n\n  const handleAdd = async (values) => {\n    const tempId = nextId;\n    const newItem = { ...values, id: tempId };\n    \n    setNextId(prev => prev + 1);\n    setOptimisticData(prev => [...prev, newItem]);\n    \n    try {\n      const response = await fetch(`https://jsonplaceholder.typicode.com/${endpoint}`, {\n        method: 'POST',\n        body: JSON.stringify(newItem),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to add ${endpoint} item`);\n      }\n      \n      const serverItem = await response.json();\n      \n      setData(prev => [...prev, serverItem]);\n      setNextId(prev => Math.max(prev, serverItem.id + 1));\n    } catch (err) {\n      setOptimisticData(prev => prev.filter(item => item.id !== tempId));\n      setError(err.message);\n    }\n  };\n\n  const handleDelete = async (ids) => {\n    const backup = [...optimisticData];\n    setOptimisticData(prev => prev.filter(item => !ids.includes(item.id)));\n    \n    try {\n      const responses = await Promise.all(\n        ids.map(id => \n          fetch(`https://jsonplaceholder.typicode.com/${endpoint}/${id}`, {\n            method: 'DELETE',\n          })\n        )\n      );\n      \n      const allOk = responses.every(r => r.ok);\n      if (!allOk) {\n        throw new Error(`Failed to delete ${endpoint} items`);\n      }\n      \n      setData(prev => prev.filter(item => !ids.includes(item.id)));\n    } catch (err) {\n      setOptimisticData(backup);\n      setError(err.message);\n    }\n  };\n\n  const handleUpdate = async (id, updates) => {\n    const original = optimisticData.find(item => item.id === id);\n    setOptimisticData(prev => prev.map(item => item.id === id ? {...item, ...updates} : item));\n    \n    try {\n      const response = await fetch(`https://jsonplaceholder.typicode.com/${endpoint}/${id}`, {\n        method: 'PATCH',\n        body: JSON.stringify(updates),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to update ${endpoint} item`);\n      }\n      \n      const updatedItem = await response.json();\n      setData(prev => prev.map(item => item.id === id ? updatedItem : item));\n    } catch (err) {\n      setOptimisticData(prev => prev.map(item => item.id === id ? original : item));\n      setError(err.message);\n    }\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div className=\"data-app\">\n      <h1>{endpoint.charAt(0).toUpperCase() + endpoint.slice(1)}</h1>\n      \n      <div style={{ marginBottom: '20px', padding: '20px', border: '1px solid #ddd' }}>\n        <h3>Add New Item</h3>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={(values, { resetForm }) => {\n            handleAdd(values);\n            resetForm();\n          }}\n        >\n          {({ errors, touched }) => (\n            <Form>\n              <div style={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: '10px' }}>\n                {fields.map(field => (\n                  <div key={field.name}>\n                    <label htmlFor={field.name}>{field.label}</label>\n                    <Field \n                      type={field.type || 'text'} \n                      name={field.name} \n                      id={field.name}\n                      as={field.as || 'input'}\n                      style={{ width: '100%', padding: '8px' }}\n                    />\n                    <ErrorMessage name={field.name} component=\"div\" style={{ color: 'red' }} />\n                  </div>\n                ))}\n              </div>\n              <button type=\"submit\" style={{ marginTop: '10px', padding: '8px 16px' }}>\n                Add Item\n              </button>\n            </Form>\n          )}\n        </Formik>\n      </div>\n\n      <DataSet \n        data={optimisticData}\n        onAdd={handleAdd}\n        onDelete={handleDelete}\n        onUpdate={handleUpdate}\n        headers={Object.keys(initialValues)}\n      />\n      {error && <div className=\"error\">{error}</div>}\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}