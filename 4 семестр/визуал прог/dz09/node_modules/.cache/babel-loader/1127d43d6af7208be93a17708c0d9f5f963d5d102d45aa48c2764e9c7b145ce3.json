{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HUAWEI\\\\visual_programming\\\\dz06\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport WeatherDisplay from './WeatherDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'eb4825f6f3d9d0ae861db8f355075906';\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState('Novosibirsk');\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const geoResponse = await axios.get(`http://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=1&appid=${API_KEY}`);\n        const {\n          lat,\n          lon\n        } = geoResponse.data[0];\n        const weatherResponse = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`);\n        setWeatherData(weatherResponse.data);\n      } catch (error) {\n        console.error('Error fetching weather data', error);\n      }\n    };\n    fetchWeather();\n    const interval = setInterval(fetchWeather, 3 * 60 * 60 * 1000); // Обновление каждые 3 часа\n    return () => clearInterval(interval);\n  }, [city]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '20px',\n      minHeight: '100vh',\n      margin: 0\n    },\n    children: weatherData && /*#__PURE__*/_jsxDEV(WeatherDisplay, {\n      weatherData: weatherData,\n      city: city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 23\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7s4Qju/ihwc2LdmmwC/i30Y9gF8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","WeatherDisplay","jsxDEV","_jsxDEV","API_KEY","App","_s","weatherData","setWeatherData","city","setCity","fetchWeather","geoResponse","get","lat","lon","data","weatherResponse","error","console","interval","setInterval","clearInterval","style","textAlign","padding","minHeight","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HUAWEI/visual_programming/dz06/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport WeatherDisplay from './WeatherDisplay';\n\nconst API_KEY = 'eb4825f6f3d9d0ae861db8f355075906';\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState('Novosibirsk');\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const geoResponse = await axios.get(`http://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=1&appid=${API_KEY}`);\n        const { lat, lon } = geoResponse.data[0];\n        const weatherResponse = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`);\n        setWeatherData(weatherResponse.data);\n      } catch (error) {\n        console.error('Error fetching weather data', error);\n      }\n    };\n\n    fetchWeather();\n    const interval = setInterval(fetchWeather, 3 * 60 * 60 * 1000); // Обновление каждые 3 часа\n    return () => clearInterval(interval);\n  }, [city]);\n\n  return (\n    <div style={{ textAlign: 'center', padding: '20px', minHeight: '100vh', margin: 0 }}>\n      {weatherData && <WeatherDisplay weatherData={weatherData} city={city} />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,OAAO,GAAG,kCAAkC;AAElD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,aAAa,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,WAAW,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,kDAAkDJ,IAAI,kBAAkBL,OAAO,EAAE,CAAC;QACtH,MAAM;UAAEU,GAAG;UAAEC;QAAI,CAAC,GAAGH,WAAW,CAACI,IAAI,CAAC,CAAC,CAAC;QACxC,MAAMC,eAAe,GAAG,MAAMjB,KAAK,CAACa,GAAG,CAAC,wDAAwDC,GAAG,QAAQC,GAAG,UAAUX,OAAO,eAAe,CAAC;QAC/II,cAAc,CAACS,eAAe,CAACD,IAAI,CAAC;MACtC,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAEDP,YAAY,CAAC,CAAC;IACd,MAAMS,QAAQ,GAAGC,WAAW,CAACV,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;IAChE,OAAO,MAAMW,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACX,IAAI,CAAC,CAAC;EAEV,oBACEN,OAAA;IAAKoB,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,OAAO,EAAE,MAAM;MAAEC,SAAS,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAE,CAAE;IAAAC,QAAA,EACjFrB,WAAW,iBAAIJ,OAAA,CAACF,cAAc;MAACM,WAAW,EAAEA,WAAY;MAACE,IAAI,EAAEA;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEV;AAAC1B,EAAA,CA1BQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}