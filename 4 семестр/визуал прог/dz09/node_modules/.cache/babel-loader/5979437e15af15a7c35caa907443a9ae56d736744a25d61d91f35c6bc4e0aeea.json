{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HUAWEI\\\\visual_programming\\\\dz06\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport WeatherDisplay from './WeatherDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'eb4825f6f3d9d0ae861db8f355075906';\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState('Novosibirsk');\n  const [coordinates, setCoordinates] = useState({\n    lat: null,\n    lon: null\n  });\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const geoResponse = await axios.get(`http://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=1&appid=${API_KEY}`);\n        const {\n          lat,\n          lon\n        } = geoResponse.data[0];\n        setCoordinates({\n          lat,\n          lon\n        });\n        const weatherResponse = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`);\n        setWeatherData(weatherResponse.data);\n      } catch (error) {\n        console.error('Error fetching weather data', error);\n      }\n    };\n    fetchWeather();\n    const interval = setInterval(fetchWeather, 3 * 60 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, [city]);\n  let backgroundColor = '#4e71f3'; // По умолчанию цвет фона для дня\n\n  if (weatherData) {\n    const currentHour = new Date(weatherData.list[0].dt_txt).getHours();\n    if (currentHour >= 18 || currentHour < 6) {\n      backgroundColor = '#010c39'; // Ночной цвет фона\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '20px',\n      minHeight: '100vh',\n      margin: 0,\n      backgroundColor\n    },\n    children: weatherData && /*#__PURE__*/_jsxDEV(WeatherDisplay, {\n      weatherData: weatherData,\n      city: city,\n      coordinates: coordinates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"M0+jWMxfLwul/lNzgmhF9BX0gKU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","WeatherDisplay","jsxDEV","_jsxDEV","API_KEY","App","_s","weatherData","setWeatherData","city","setCity","coordinates","setCoordinates","lat","lon","fetchWeather","geoResponse","get","data","weatherResponse","error","console","interval","setInterval","clearInterval","backgroundColor","currentHour","Date","list","dt_txt","getHours","style","textAlign","padding","minHeight","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HUAWEI/visual_programming/dz06/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport WeatherDisplay from './WeatherDisplay';\n\nconst API_KEY = 'eb4825f6f3d9d0ae861db8f355075906';\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState('Novosibirsk');\n  const [coordinates, setCoordinates] = useState({ lat: null, lon: null });\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const geoResponse = await axios.get(`http://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=1&appid=${API_KEY}`);\n        const { lat, lon } = geoResponse.data[0];\n        setCoordinates({ lat, lon }); \n        const weatherResponse = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`);\n        setWeatherData(weatherResponse.data);\n      } catch (error) {\n        console.error('Error fetching weather data', error);\n      }\n    };\n\n    fetchWeather();\n    const interval = setInterval(fetchWeather, 3 * 60 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, [city]);\n\n let backgroundColor = '#4e71f3'; // По умолчанию цвет фона для дня\n\nif (weatherData) {\n  const currentHour = new Date(weatherData.list[0].dt_txt).getHours();\n  if (currentHour >= 18 || currentHour < 6) {\n    backgroundColor = '#010c39'; // Ночной цвет фона\n  }\n}\n\nreturn (\n  <div style={{ textAlign: 'center', padding: '20px', minHeight: '100vh', margin: 0, backgroundColor }}>\n    {weatherData && <WeatherDisplay weatherData={weatherData} city={city} coordinates={coordinates} />}\n  </div>\n);\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,OAAO,GAAG,kCAAkC;AAElD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,aAAa,CAAC;EAC/C,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC;IAAEe,GAAG,EAAE,IAAI;IAAEC,GAAG,EAAE;EAAK,CAAC,CAAC;EAExEf,SAAS,CAAC,MAAM;IACd,MAAMgB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,WAAW,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,kDAAkDR,IAAI,kBAAkBL,OAAO,EAAE,CAAC;QACtH,MAAM;UAAES,GAAG;UAAEC;QAAI,CAAC,GAAGE,WAAW,CAACE,IAAI,CAAC,CAAC,CAAC;QACxCN,cAAc,CAAC;UAAEC,GAAG;UAAEC;QAAI,CAAC,CAAC;QAC5B,MAAMK,eAAe,GAAG,MAAMnB,KAAK,CAACiB,GAAG,CAAC,wDAAwDJ,GAAG,QAAQC,GAAG,UAAUV,OAAO,eAAe,CAAC;QAC/II,cAAc,CAACW,eAAe,CAACD,IAAI,CAAC;MACtC,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAEDL,YAAY,CAAC,CAAC;IACd,MAAMO,QAAQ,GAAGC,WAAW,CAACR,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IAC9D,OAAO,MAAMS,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACb,IAAI,CAAC,CAAC;EAEX,IAAIgB,eAAe,GAAG,SAAS,CAAC,CAAC;;EAElC,IAAIlB,WAAW,EAAE;IACf,MAAMmB,WAAW,GAAG,IAAIC,IAAI,CAACpB,WAAW,CAACqB,IAAI,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,CAACC,QAAQ,CAAC,CAAC;IACnE,IAAIJ,WAAW,IAAI,EAAE,IAAIA,WAAW,GAAG,CAAC,EAAE;MACxCD,eAAe,GAAG,SAAS,CAAC,CAAC;IAC/B;EACF;EAEA,oBACEtB,OAAA;IAAK4B,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,OAAO,EAAE,MAAM;MAAEC,SAAS,EAAE,OAAO;MAAEC,MAAM,EAAE,CAAC;MAAEV;IAAgB,CAAE;IAAAW,QAAA,EAClG7B,WAAW,iBAAIJ,OAAA,CAACF,cAAc;MAACM,WAAW,EAAEA,WAAY;MAACE,IAAI,EAAEA,IAAK;MAACE,WAAW,EAAEA;IAAY;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/F,CAAC;AAER;AAAClC,EAAA,CArCQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}