{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HUAWEI\\\\visual_programming\\\\dz07\\\\src\\\\DataSet.js\",\n  _s = $RefreshSig$();\n// DataSet.js\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataSet = ({\n  headers,\n  data,\n  renderHeader,\n  renderCell\n}) => {\n  _s();\n  const [selectedCells, setSelectedCells] = useState(new Set());\n  const handleCellClick = (rowIndex, colIndex, event) => {\n    const cellKey = `${rowIndex}-${colIndex}`;\n    if (event.ctrlKey || event.metaKey) {\n      const newSelection = new Set(selectedCells);\n      if (newSelection.has(cellKey)) {\n        newSelection.delete(cellKey);\n      } else {\n        newSelection.add(cellKey);\n      }\n      setSelectedCells(newSelection);\n    } else {\n      if (selectedCells.size === 1 && selectedCells.has(cellKey)) {\n        setSelectedCells(new Set());\n      } else {\n        setSelectedCells(new Set([cellKey]));\n      }\n    }\n  };\n  const effectiveHeaders = headers || (data.length > 0 ? Object.keys(data[0]) : []);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    style: {\n      borderCollapse: 'collapse',\n      width: '100%',\n      border: '1px solid #ddd',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: effectiveHeaders.map((header, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            border: '1px solid #ddd',\n            padding: '8px',\n            backgroundColor: '#f2f2f2',\n            textAlign: 'left'\n          },\n          children: renderHeader ? renderHeader(header, idx) : header\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.map((item, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: effectiveHeaders.map((header, colIndex) => {\n          const cellKey = `${rowIndex}-${colIndex}`;\n          const isSelected = selectedCells.has(cellKey);\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: '1px solid #ddd',\n              padding: '8px',\n              backgroundColor: isSelected ? '#c0def6' : 'transparent',\n              cursor: 'pointer'\n            },\n            onClick: e => handleCellClick(rowIndex, colIndex, e),\n            children: renderCell ? renderCell(item, header, rowIndex, colIndex) : item[header]\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this);\n        })\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(DataSet, \"/1dhhXtIqtX32c2huOcrldGsq7w=\");\n_c = DataSet;\nDataSet.propTypes = {\n  headers: PropTypes.array,\n  data: PropTypes.array.isRequired,\n  renderHeader: PropTypes.func,\n  renderCell: PropTypes.func\n};\nexport default DataSet;\nvar _c;\n$RefreshReg$(_c, \"DataSet\");","map":{"version":3,"names":["React","useState","PropTypes","jsxDEV","_jsxDEV","DataSet","headers","data","renderHeader","renderCell","_s","selectedCells","setSelectedCells","Set","handleCellClick","rowIndex","colIndex","event","cellKey","ctrlKey","metaKey","newSelection","has","delete","add","size","effectiveHeaders","length","Object","keys","style","borderCollapse","width","border","fontFamily","children","map","header","idx","padding","backgroundColor","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","item","isSelected","cursor","onClick","e","_c","propTypes","array","isRequired","func","$RefreshReg$"],"sources":["C:/Users/HUAWEI/visual_programming/dz07/src/DataSet.js"],"sourcesContent":["// DataSet.js\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst DataSet = ({ headers, data, renderHeader, renderCell }) => {\n  const [selectedCells, setSelectedCells] = useState(new Set());\n\n  const handleCellClick = (rowIndex, colIndex, event) => {\n    const cellKey = `${rowIndex}-${colIndex}`;\n\n    if (event.ctrlKey || event.metaKey) {\n      const newSelection = new Set(selectedCells);\n      if (newSelection.has(cellKey)) {\n        newSelection.delete(cellKey);\n      } else {\n        newSelection.add(cellKey);\n      }\n      setSelectedCells(newSelection);\n    } else {\n      if (selectedCells.size === 1 && selectedCells.has(cellKey)) {\n        setSelectedCells(new Set());\n      } else {\n        setSelectedCells(new Set([cellKey]));\n      }\n    }\n  };\n\n  const effectiveHeaders = headers || (data.length > 0 ? Object.keys(data[0]) : []);\n\n  return (\n    <table style={{\n      borderCollapse: 'collapse',\n      width: '100%',\n      border: '1px solid #ddd',\n      fontFamily: 'Arial, sans-serif'\n    }}>\n      <thead>\n        <tr>\n          {effectiveHeaders.map((header, idx) => (\n            <th key={idx} style={{\n              border: '1px solid #ddd',\n              padding: '8px',\n              backgroundColor: '#f2f2f2',\n              textAlign: 'left'\n            }}>\n              {renderHeader ? renderHeader(header, idx) : header}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((item, rowIndex) => (\n          <tr key={rowIndex}>\n            {effectiveHeaders.map((header, colIndex) => {\n              const cellKey = `${rowIndex}-${colIndex}`;\n              const isSelected = selectedCells.has(cellKey);\n              \n              return (\n                <td \n                  key={colIndex}\n                  style={{\n                    border: '1px solid #ddd',\n                    padding: '8px',\n                    backgroundColor: isSelected ? '#c0def6' : 'transparent',\n                    cursor: 'pointer'\n                  }}\n                  onClick={(e) => handleCellClick(rowIndex, colIndex, e)}\n                >\n                  {renderCell ? renderCell(item, header, rowIndex, colIndex) : item[header]}\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nDataSet.propTypes = {\n  headers: PropTypes.array,\n  data: PropTypes.array.isRequired,\n  renderHeader: PropTypes.func,\n  renderCell: PropTypes.func,\n};\n\nexport default DataSet;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}